name: Build and Deploy

on:
   push:
      tags:
         - 'v**'

env:
   # See: https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-ghcrio
   IMAGE_NAME: 5etools

jobs:
   build-and-deploy:
      runs-on: ubuntu-latest
      steps:
         -  uses: actions/checkout@master

         # See: https://stackoverflow.com/a/58178121
         -  name: Set env
            run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

         -  name: Archive Release
            run: |
               zip -r 5etools-${{ env.RELEASE_VERSION }}.zip . -x '*.git*' '*node_modules*' '*.github*' '*img*'

         -  name: Add Cache-Busting Strings
            run: |
               bash ./.github/add-query-strings.sh ${{ env.RELEASE_VERSION }}

         -  name: Build SEO Pages
            env:
               VET_BASE_SITE_URL: https://5etools-mirror-1.github.io/
               VET_SEO_IS_SKIP_UA_ETC: true
            run: |
               npm run build:seo -- ${{ env.RELEASE_VERSION }}

         # See: https://github.com/JamesIves/github-pages-deploy-action
         -  name: Deploy
            uses: JamesIves/github-pages-deploy-action@releases/v4
            with:
               branch: gh-pages
               folder: .

         -  name: Archive Images
            run: |
               zip -r -s 500m img-${{ env.RELEASE_VERSION }}.zip img/

         -  name: Upload Release
            # Add the files one-by-one in an effort to avoid timeouts
            run: |
               hub release create -a 5etools-${{ env.RELEASE_VERSION }}.zip -m ${{ env.RELEASE_VERSION }} ${{ env.RELEASE_VERSION }}
               for f in $(find . -name 'img-${{ env.RELEASE_VERSION }}.*' -print); do hub release edit ${{ env.RELEASE_VERSION }} -m '' -a $f; done
            env:
               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

         # region See: https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-ghcrio
         -  name: Build image
            run: |
               docker build -t $IMAGE_NAME .

         -  name: Log in to registry
            run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

         -  name: Push image
            run: |
               IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

               # Change all uppercase to lowercase
               IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
               # Strip git ref prefix from version
               VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
               # Strip "v" prefix from tag name
               [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
               echo IMAGE_ID=$IMAGE_ID
               echo VERSION=$VERSION
               docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
               # Always tag latest when pushing a tag, as we don't expect to ever merge old tags
               [[ "${{ github.ref }}" == "refs/tags/"* ]] && docker tag $IMAGE_NAME $IMAGE_ID:latest
               docker push $IMAGE_ID:$VERSION
               docker push $IMAGE_ID:latest
         # endregion
